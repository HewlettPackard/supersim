{
  "simulator": {
    "channel_cycle_time": 1,
    "router_cycle_time": 1,
    "interface_cycle_time": 1,
    "print_progress": true,
    "print_interval": 1.0,  // seconds
    "random_seed": 12345678
  },
  "network": {
    "topology": "hyperx",
    "dimension_widths": [2, 3, 4],
    "dimension_weights": [2, 1, 2],
    "concentration": 1,
    "protocol_classes": [
      {
        "num_vcs": 2,
        "routing": {
          "algorithm": "ugal",
          "min_all_vc_sets" : false,
          "bias_mode" : "regular",
          "congestion_bias" : 0,
          "decision_scheme" : "monolithic_weighted",
          "hop_count_mode" : "normalized",
          "independent_bias" : 0,
          "intermediate_node" : "unaligned",
          "latency" : 1,
          "max_outputs" : 0,
          "minimal" : "dimension_order",
          "non_minimal" : "valiants",
          "short_cut": true,
          "output_algorithm" : "random",
          "output_type" : "vc",
          "threshold" : 0
        }
      },
      {
        "num_vcs": 2,
        "routing": {
          "algorithm": "dimension_order",
          "latency": 1,
          "output_type": "vc",
          "output_algorithm": "minimal",
          "max_outputs": 0
        }
      }
    ],
    "channel_mode": "scalar",  // "fixed" | "scalar"
    "channel_scalars": [2.3, 1.9, 3.0],  // same size as dimension_widths
    "internal_channel": {
      "latency": 1  // cycles
    },
    "external_channel": {
      "latency": 1  // cycles
    },
    "channel_log": {
      "file": "/dev/null"  // "channels.csv"
    },
    "router": {
      "architecture": "output_queued",
      "congestion_sensor": {
        "algorithm": "buffer_occupancy",
        "latency": 1,
        "granularity": 0,
        "minimum": 0.0,
        "offset": 0.0,
        "mode": "absolute_port"  // {normalized,absolute}_{port,vc}
      },
      "congestion_mode": "output",
      "input_queue_depth": 16,  // 1x max packet
      "transfer_latency": 1,
      "output_queue_depth": 16,  // 1x max packet
      "output_crossbar": {
        "latency": 1  // cycles
      },
      "output_crossbar_scheduler": {
        "allocator": {
          "type": "r_separable",
          "slip_latch": true,
          "resource_arbiter": {
            "type": "random"
          }
        },
        "full_packet": true,
        "packet_lock": true,
        "idle_unlock": false
      }
    },
    "interface": {
      "type": "standard",
      "adaptive": false,
      "fixed_msg_vc": false,
      "crossbar_scheduler": "$&(network.router.output_crossbar_scheduler)&$",
      "init_credits": "$&(network.router.input_queue_depth)&$",
      "crossbar": {
        "latency": 1  // cycles
      }
    }
  },
  "metadata_handler": {
    "type": "zero"
  },
  "workload": {
    "message_log": {
      "file": "/dev/null"  // "data.mpf.gz"
    },
    "applications": [
      {
        "type": "alltoall",
        "alltoall_terminal": {
          // requests
          "request_protocol_class": 0,
          "request_injection_rate": 0.35,
          // responses
          "enable_responses": true,
          "request_processing_latency": 1000,
          "max_outstanding_transactions": 0,
          "response_protocol_class": 1,
          // traffic generation
          "delay": 1,
          "num_iterations": 100,
          "perform_barriers": true,
          "max_packet_size": 16,
          "traffic_pattern": {
            "type": "random",
            "send_to_self": true
          },
          "message_size_distribution": {
            "type": "single",
            "message_size": 16,
            "dependent_message_size": 1
          }
        },
        "rate_log": {
          "file": "/dev/null"  // "rates.csv"
        }
      }
    ]
  },
  "debug": [
    "Workload.Application_0",
    "Workload.Application_0.AllToAllTerminal_0",
    "Workload.Application_0.AllToAllTerminal_1",
    "Workload.Application_0.AllToAllTerminal_2",
    "Workload.Application_0.AllToAllTerminal_3",
    "Workload.Application_0.AllToAllTerminal_4",
    "Workload.Application_0.AllToAllTerminal_5",
    "Workload.Application_0.AllToAllTerminal_6",
    "Workload.Application_0.AllToAllTerminal_7",
    "Workload.Application_0.AllToAllTerminal_8",
    "Workload.Application_0.AllToAllTerminal_9",
    "Workload.Application_0.AllToAllTerminal_10",
    "Workload.Application_0.AllToAllTerminal_11",
    "Workload.Application_0.AllToAllTerminal_12",
    "Workload.Application_0.AllToAllTerminal_13",
    "Workload.Application_0.AllToAllTerminal_14",
    "Workload.Application_0.AllToAllTerminal_15",
    "Workload.Application_0.AllToAllTerminal_16",
    "Workload.Application_0.AllToAllTerminal_17",
    "Workload.Application_0.AllToAllTerminal_18",
    "Workload.Application_0.AllToAllTerminal_19",
    "Workload.Application_0.AllToAllTerminal_20",
    "Workload.Application_0.AllToAllTerminal_21",
    "Workload.Application_0.AllToAllTerminal_22",
    "Workload.Application_0.AllToAllTerminal_23"
  ]
}
